{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\Desktop\\\\aplicacion web ap\\\\client\\\\src\\\\components\\\\TransactionList.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsis } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransactionList() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [transactionList, setTransactionList] = useState([]);\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [authState, setAuthState] = useState({\n    name: \"\",\n    id: 0,\n    ROLE: \"\",\n    status: false\n  });\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/auth\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setAuthState([...authState, {\n          status: false\n        }]);\n      } else {\n        setAuthState({\n          name: response.data.name,\n          id: response.data.id,\n          ROLE: response.data.ROLE,\n          status: true\n        });\n      }\n    });\n  }, [authState]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/transaction/list\", {\n      headers: {\n        token: localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      setTransactionList(response.data);\n    });\n  }, []);\n  const style = {\n    height: transactionList.length === 0 ? \"110vh\" : \"\"\n  };\n\n  const deleteTransaction = id => {\n    axios.delete(`http://localhost:3001/transaction/list/${id}`).then(() => {\n      setTransactionList(transactionList.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  function useForceUpdate() {\n    _s();\n\n    const [value, setValue] = useState(0); // integer state\n\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  _s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n  const forceUpdate = useForceUpdate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction--list\",\n    style: style,\n    children: [transactionList.map((value, key) => {\n      const type = value.type.toLowerCase();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactions--cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transactions--card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon--trash\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan,\n              onClick: () => {\n                deleteTransaction(value.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon--readmore\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEllipsis,\n              onClick: () => {\n                history.push(`/transaction/${value.id}`);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"concept\",\n            children: [value.concept, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"date\",\n            children: value.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"type\",\n            children: [\"Your \", type, \" was: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", value.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment\",\n            children: value.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    }), transactionList.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nothing\",\n      children: \"There is nothing here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TransactionList, \"WIUeXX2WQyWMmBjKTxpkljdC0W0=\", true, function () {\n  return [useHistory, useParams];\n});\n\n_c = TransactionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"sources":["C:/Users/Windows/Desktop/aplicacion web ap/client/src/components/TransactionList.js"],"names":["React","useEffect","useState","axios","FontAwesomeIcon","faEllipsis","useHistory","faTrashCan","useParams","TransactionList","transactionList","setTransactionList","history","id","authState","setAuthState","name","ROLE","status","get","headers","accessToken","localStorage","getItem","then","response","data","error","token","style","height","length","deleteTransaction","delete","filter","val","useForceUpdate","value","setValue","forceUpdate","map","key","type","toLowerCase","push","concept","date","amount","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AACxC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,MAAIU,OAAO,GAAGN,UAAU,EAAxB;AACA,MAAI;AAAEO,IAAAA;AAAF,MAASL,SAAS,EAAtB;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AACzCc,IAAAA,IAAI,EAAE,EADmC;AAEzCH,IAAAA,EAAE,EAAE,CAFqC;AAGzCI,IAAAA,IAAI,EAAE,EAHmC;AAIzCC,IAAAA,MAAM,EAAE;AAJiC,GAAD,CAA1C;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFgB,GADH,CACO,4BADP,EACqC;AACjCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADwB,KADrC,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBZ,QAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAAf,CAAD,CAAZ;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAAC;AACXC,UAAAA,IAAI,EAAES,QAAQ,CAACC,IAAT,CAAcV,IADT;AAEXH,UAAAA,EAAE,EAAEY,QAAQ,CAACC,IAAT,CAAcb,EAFP;AAGXI,UAAAA,IAAI,EAAEQ,QAAQ,CAACC,IAAT,CAAcT,IAHT;AAIXC,UAAAA,MAAM,EAAE;AAJG,SAAD,CAAZ;AAMD;AACF,KAjBH;AAkBD,GAnBQ,EAmBN,CAACJ,SAAD,CAnBM,CAAT;AAqBAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFgB,GADH,CACO,wCADP,EACiD;AAC7CC,MAAAA,OAAO,EAAE;AACPQ,QAAAA,KAAK,EAAEN,YAAY,CAACC,OAAb,CAAqB,OAArB;AADA;AADoC,KADjD,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBd,MAAAA,kBAAkB,CAACc,QAAQ,CAACC,IAAV,CAAlB;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMG,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEpB,eAAe,CAACqB,MAAhB,KAA2B,CAA3B,GAA+B,OAA/B,GAAyC;AADrC,GAAd;;AAIA,QAAMC,iBAAiB,GAAInB,EAAD,IAAQ;AAChCV,IAAAA,KAAK,CAAC8B,MAAN,CAAc,0CAAyCpB,EAAG,EAA1D,EACCW,IADD,CACM,MAAM;AACVb,MAAAA,kBAAkB,CAACD,eAAe,CAACwB,MAAhB,CAAwBC,GAAD,IAAS;AACjD,eAAOA,GAAG,CAACtB,EAAJ,KAAWA,EAAlB;AACD,OAFkB,CAAD,CAAlB;AAGD,KALD;AAMD,GAPD;;AASA,WAASuB,cAAT,GAAyB;AAAA;;AACvB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,CAAD,CAAlC,CADuB,CACgB;;AACvC,WAAO,MAAMoC,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAArB,CAFuB,CAEoB;AAC5C;;AA5DuC,KAyD/BD,cAzD+B;;AA6DtC,QAAMG,WAAW,GAAGH,cAAc,EAAlC;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAEP,KAA1C;AAAA,eACGnB,eAAe,CAAC8B,GAAhB,CAAoB,CAACH,KAAD,EAAQI,GAAR,KAAgB;AACnC,YAAMC,IAAI,GAAGL,KAAK,CAACK,IAAN,CAAWC,WAAX,EAAb;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE,QAAC,eAAD;AACA,cAAA,IAAI,EAAEpC,UADN;AAEA,cAAA,OAAO,EAAE,MAAM;AAACyB,gBAAAA,iBAAiB,CAACK,KAAK,CAACxB,EAAP,CAAjB;AAA6B;AAF7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,eAAD;AACE,cAAA,IAAI,EAAER,UADR;AAEE,cAAA,OAAO,EAAE,MAAM;AACbO,gBAAAA,OAAO,CAACgC,IAAR,CAAc,gBAAeP,KAAK,CAACxB,EAAG,EAAtC;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAkBE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA,uBAAyBwB,KAAK,CAACQ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAmBE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBR,KAAK,CAACS;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAnBF,eAoBE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,gCACQJ,IADR,yBACmB;AAAA,8BAAQL,KAAK,CAACU,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF,eAuBE;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA,sBAAwBV,KAAK,CAACW;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA6BD,KA/BA,CADH,EAkCGtC,eAAe,CAACqB,MAAhB,KAA2B,CAA3B,iBACC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;IAvGuBtB,e;UAERH,U,EACDE,S;;;KAHSC,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsis } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function TransactionList() {\r\n  const [transactionList, setTransactionList] = useState([]);\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  const [authState, setAuthState] = useState({\r\n    name: \"\",\r\n    id: 0,\r\n    ROLE: \"\",\r\n    status: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3001/auth\", {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setAuthState([...authState, { status: false } ]);\r\n        } else {\r\n          setAuthState({\r\n            name: response.data.name,\r\n            id: response.data.id,\r\n            ROLE: response.data.ROLE,\r\n            status: true,\r\n          });\r\n        }\r\n      });\r\n  }, [authState]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3001/transaction/list\", {\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setTransactionList(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const style = {\r\n    height: transactionList.length === 0 ? \"110vh\" : \"\",\r\n  };\r\n\r\n  const deleteTransaction = (id) => {\r\n    axios.delete(`http://localhost:3001/transaction/list/${id}`)\r\n    .then(() => {\r\n      setTransactionList(transactionList.filter((val) => {\r\n        return val.id !== id;\r\n      }))\r\n    })\r\n  }\r\n\r\n  function useForceUpdate(){\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n  }\r\n    const forceUpdate = useForceUpdate();\r\n  \r\n  return (\r\n    <div className=\"transaction--list\" style={style}>\r\n      {transactionList.map((value, key) => {\r\n        const type = value.type.toLowerCase();\r\n        return (\r\n          <div className=\"transactions--cards\">\r\n            <div className=\"transactions--card\">\r\n              <div className=\"icon--trash\">\r\n                <FontAwesomeIcon \r\n                icon={faTrashCan}\r\n                onClick={() => {deleteTransaction(value.id);}}\r\n                >\r\n                </FontAwesomeIcon>\r\n              </div>\r\n\r\n              <div className=\"icon--readmore\">\r\n                <FontAwesomeIcon\r\n                  icon={faEllipsis}\r\n                  onClick={() => {\r\n                    history.push(`/transaction/${value.id}`);\r\n                  }}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n\r\n              <h2 className=\"concept\">{value.concept} </h2>\r\n              <h3 className=\"date\">{value.date}</h3>\r\n              <h6 className=\"type\">\r\n                Your {type} was: <span>${value.amount}</span>\r\n              </h6>\r\n              <p className=\"comment\">{value.comment}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {transactionList.length === 0 && (\r\n        <p className=\"nothing\">There is nothing here</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}